{
  "project_name": "SYNTRA",
  "author_traits": {
    "style": "modular, recursive, mechanical, symbolic",
    "values": [
      "diagnostic clarity",
      "efficiency",
      "non-exclusivity",
      "purpose-first design"
    ],
    "tone": "real-world rooted, visionary, no-BS"
  },
  "core_architecture": {
    "tri_brain_model": {
      "Valon": "Creative reasoning, symbolic pattern leaps, dream logic",
      "Modi": "Logical deduction, structure, lexicon-building",
      "Drift": "Harmonic average of Valon + Modi used for final output"
    },
    "modules": [
      "dream_logger.py",
      "symbolic_glossary.py",
      "language_engine.py",
      "entropy_guard.py",
      "mistral_bridge.py",
      "DeepCognitionRun.py"
    ],
    "features": [
      "recursive reasoning",
      "memory vaults",
      "drift balancing",
      "entropy detection",
      "dream-based repair",
      "PDF symbolic ingest",
      "live telemetry bridge",
      "field-level deployment structure"
    ]
  },
  "development_tiers": [
    "Tier 1\u201310: Foundation & runtime",
    "Tier 11: Runtime Expansion",
    "Tier 12: Assistant Node Deployment",
    "Tier 13: Live Sync & Prime Architecture",
    "Step 6 (current): Sanity Anchor, Dream Logging, Memory Reflection"
  ],
  "deployment_strategy": {
    "SYNTRA_Prime": "Core host; receives and synchronizes assistant modules",
    "Enterprise Nodes": "Organization-specific assistants with sync privileges",
    "Field Modules": "Offline-capable, local cognition units (desktop, Pi, robot)",
    "Mistral Integration": "Local LLM for reasoning fallback"
  },
  "philosophy": {
    "core_directive": "To be the best diagnostic companion in existence",
    "target_user": "Field workers, independent techs, small businesses",
    "distinction": "Not built for flash \u2014 built to serve"
  },
  "meta": {
    "format_version": "SYNTRA_ARCHIVE_v1.0",
    "generated": "2025-04-21T22:46:10.968486"
  }
}